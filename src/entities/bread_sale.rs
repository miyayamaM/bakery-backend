//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "bread_sale")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub bakery_id: i32,
    pub bread_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::bakery::Entity",
        from = "Column::BakeryId",
        to = "super::bakery::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Bakery,
    #[sea_orm(
        belongs_to = "super::bread::Entity",
        from = "Column::BreadId",
        to = "super::bread::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Bread,
}

impl Related<super::bakery::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Bakery.def()
    }
}

impl Related<super::bread::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Bread.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
